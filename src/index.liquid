---
# Feel free to add content and custom Front Matter to this file.

layout: home
---
<article class="helvetica pb5" id="herohero">
  <header class="vh-100 dt w-100">
    <div
      class="dtc v-mid cover ph3 ph4-m ph5-l">
      <h1 class="f2 f-subheadline-l measure lh-title fw9">A minimal web browser for the distributed web</h1>
    </div>
  </header>
</article>
  <div class="pt2 ph6-l " id="openingtext">
     <p class=" pl1 pr1 f4 mb2 pa3 lh-copy mt0-ns near-white tl" id="hello">
      The current web works by having companies set up servers which host people's websites and data.
      This means that if a company goes down, or if a person doesn't have access to their server
      (say they're offline, behind a firewall, or can't afford a decent connection) they can't access it.
      This also means that not everybody can publish things since it takes a lot of technical know-how
      to host things that they can have full control over.
      The distributed web works by removing central web servers and instead using Peer to Peer
      connections directly between people to load data.</p>

      <p class="pl1 pr1 f4 mb5 pa3 lh-copy mt0-ns near-white tl" id="hello">

      If you want to create something,
      you serve it directly from your computer, and when somebody downloads their content
      they will also re-share it. The more people load some data, the more resilient it is and
      the faster it can be downloaded. As well, once you've loaded some data over the distributed web,
      you no longer need to be connected to the internet to access it.
      In fact, if you have a bunch of people connected to a wifi router in the middle of nowhere,
      your peer to peer apps will all keep working.</p>

      <div class="drops">
          <div x-data="{ open:false } ">
            <button @click="open = ! open">How does this work</button>

            <div x-show="open" @onclick.outside="open = false" x-transition.duration.850ms>
              <div class="mt6">
              <iframe width="760" height="515" src="https://www.youtube.com/embed/TnYKvOQB0ts" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </div>

            </div>

          </div>

          <div x-data="{ open:false } ">
            <button @click="open = ! open">How do I share stuff?</button>

            <div x-show="open" @onclick.outside="open = false" x-transition.duration.850ms>
              <div class="mt6">
                <p class=" f4 mb5 pa3 lh-copy mt0-ns near-white tl" id="hello">
                 In the same way as you can navigate to http://example.com, you can navigate
                 to hyper://blog.mauve.moe and have it load from anybody on the network that has a
                 copy. This can be done via the different protocols that Agregore supports like
                  BitTorrent, IPFS, and Hypercore Protocol. The web contents are rendered via
                  Chromium using the Electron framework. Electron is useful since it's what
                   allows us to publish Agregore on Windows, MacOS, and Linux.
                   Agregore not only supports loading data through custom protocols, but it also provides APIs for uploading data into peer to peer protocols.
                   This is done via the browser's fetch() API which is what web developers use to talk to web
                    servers over HTTP or HTTPS.
                 <br><br><b>You can create your own peer to peer website using this simple code snippet:</b>
                 <img src="/images/README.png" alt="Girl in a jacket" width="700" height="300"></p>
        </div>
            </div>
          </div>
      </div>
<style>
button{
  font-size: 18px;
  margin: 30px;
  font-family: monospace;
  background-color: white;
  color: purple;
  border-color: black;
  border-radius: 25px;
  padding 4px;
}
</style>
